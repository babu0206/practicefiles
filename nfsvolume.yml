apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springbootapp
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 30
  template:
    metadata:
      name: springbootpod
      labels:
        app: springbootapp
    spec:
      containers:
      - name: springbootcontainer
        image: knagarjunareddy/spring-boot-app
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongo
        - name: MONGO_DB_USERNAME
          value: naga
        - name: MONGO_DB_PASSWORD
          value: naga45         
---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
spec:
  type: NodePort
  selector:
    app: springbootapp
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: mongorc
spec:
  replicas: 1
  selector:
    app: mongo
  template:
    metadata:
      name: mongopod
      labels:
        app: mongo
    spec:
      containers:
      - name: mongocont
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: naga
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: naga45
        volumeMounts:
        - name: mongovol
          mountPath: /data/db        
      volumes:
      - name : mongovol
        nfs:
          server: 172.31.41.239
          path: "/mnt/nfs_share"

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017
